// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MuseumExhibits.Infrastructure.Data;

#nullable disable

namespace MuseumExhibits.Infrastructure.Migrations
{
    [DbContext(typeof(MuseumExhibitsDbContext))]
    [Migration("20250327100516_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MuseumExhibits.Core.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("MuseumExhibits.Core.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MuseumExhibits.Core.Models.Exhibit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchivalMaterials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArrivalMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssociatedPersonsAndEvents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorOrManufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bibliography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("ConfirmationDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreationCentury")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("CreationExactDate")
                        .HasColumnType("date");

                    b.Property<int?>("CreationYear")
                        .HasColumnType("int");

                    b.Property<string>("DiscoveryTimeAndPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElementCount")
                        .HasColumnType("int");

                    b.Property<string>("EnteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EntryDate")
                        .HasColumnType("date");

                    b.Property<string>("ExistenceTimeAndPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryVerificationData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTransportable")
                        .HasColumnType("bit");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Measurements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovementDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MuseumDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfCreation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreciousMetalContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreciousStoneContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreservationState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelatedDocuments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("RemovalDate")
                        .HasColumnType("date");

                    b.Property<string>("RemovalReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleKeeper")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestorationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestorationRecommendations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("ReturnDeadline")
                        .HasColumnType("date");

                    b.Property<string>("ReturnDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceOfArrival")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Technique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemporaryStoragePurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Exhibits");
                });

            modelBuilder.Entity("MuseumExhibits.Core.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExhibitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsTitleImage")
                        .HasColumnType("bit");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExhibitId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("MuseumExhibits.Core.Models.Exhibit", b =>
                {
                    b.HasOne("MuseumExhibits.Core.Models.Category", "Category")
                        .WithMany("Exhibits")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MuseumExhibits.Core.Models.Image", b =>
                {
                    b.HasOne("MuseumExhibits.Core.Models.Exhibit", "Exhibit")
                        .WithMany("Images")
                        .HasForeignKey("ExhibitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exhibit");
                });

            modelBuilder.Entity("MuseumExhibits.Core.Models.Category", b =>
                {
                    b.Navigation("Exhibits");
                });

            modelBuilder.Entity("MuseumExhibits.Core.Models.Exhibit", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
